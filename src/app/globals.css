@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.answer-loader {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  /* display: inline-block; */
  border-top: 4px solid #d7a1f9;
  border-right: 4px solid transparent;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}
.answer-loader::after {
  content: "";
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border-left: 4px solid #a020f0;
  border-bottom: 4px solid transparent;
  animation: rotation 0.5s linear infinite reverse;
}
@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.scrollbar-hidden::-webkit-scrollbar {
  width: 0;
  height: 0;
}

.scrollbar-hidden {
  scrollbar-width: none;
}

.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
}

.scrollbar-thumb-gray-500::-webkit-scrollbar-thumb {
  background-color: #6a6b6c;
}

.ProseMirror {
  caret-color: rgb(148, 153, 142);
}

.ProseMirror p {
  margin: 0;
  min-width: 1px;
}

.my-bg-gradient {
  background-color: #000000;
  background-image: linear-gradient(315deg, #000000 0%, #1f1c3e 74%);
}

.story-pilot-link {
  /* text-shadow: 1px 2px 2px rgba(193, 130, 170, 0.53); */
  background-image: linear-gradient(
    135deg,
    #e483f8 5%,
    #e13ce9 35%,
    #dc05f4 60%
  );
  -webkit-background-clip: text; /* For transparent text */
  -webkit-text-fill-color: transparent;
  color: transparent; /* Fallback for older browsers */
}

.story-pilot-link::before {
  content: "";
  position: absolute;
  bottom: -5px; /* Adjust for cut depth */
  left: 0;
  width: 100%;
  height: 10px; /* Adjust for cut height */
  background-color: inherit; /* Match text color */
  clip-path: polygon(5% 0, 95% 0, 100% 100%, 0 100%);
}

.shooting-star-border {
  --transition: 0.25s;
  --spark: 3s;
  --bg: rgb(17, 2, 18);
  background: var(--bg);
  padding: 6px 18px;
  display: grid;
  border-radius: 9999px;
  position: relative;
  overflow: hidden;
  box-shadow: 0 1000px 0 0 hsl(0 0% 20%) inset;
  transition: box-shadow var(--transition), background var(--transition),
    transform var(--transition);
}

.shooting-star-border:hover .backdrop {
  background: rgb(20 20 20);
}

.shooting-star-border:hover {
  transform: scale(1.05);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  inset: 0 auto auto 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: 1;
  background: conic-gradient(from 0deg, transparent 0 340deg, white 360deg);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.backdrop {
  position: absolute;
  inset: 1px;
  background: var(--bg);
  border-radius: 9999px;
  transition: background var(--transition) opacity var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

.text {
  z-index: 1;
  color: rgb(203 213 225);
}
